@page
@using MarketSystem.Componets
@model MarketSystem.Pages.ProductAddingModel
@{
    ViewData["Title"] = "Add Products";
}

<div class="text-center">
    <h1 class="display-4">
        Add Products
    </h1>
</div>

@(await Html.RenderComponentAsync<ProductAdd>(RenderMode.ServerPrerendered))

<script src="_framework/blazor.server.js"></script>
<script> 

    function addDisableFields(){
        var name = document.getElementById("name");
        var price = document.getElementById("price");

        name.setAttribute("disabled", "");
        price.setAttribute("disabled", "");
    }

    function removeDisableFields() {
        var name = document.getElementById("name");
        var price = document.getElementById("price");

        name.removeAttribute("disabled", "");
        price.removeAttribute("disabled", ""); 
    }

    function changeDropdownValue(id) {
        const select = document.getElementById("productSelect");
        select.value = id;
    }

    function checkValidity() {

        console.log("Checking validity!");

        var valid = true;
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
        .forEach(function (form) {
            if (!form.checkValidity()) {
                //console.log(form);
                form.classList.add('was-validated');
                valid = false;
            }
        //    form.addEventListener('button', function (event) {
        //    if (!form.checkValidity()) {
        //        console.log("does not validate");
        //        event.preventDefault()
        //        event.stopPropagation()
        //    }

        //    form.classList.add('was-validated')
        //    }, false)
        })
        return valid;
    }

    function removeValidation() {
        var forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
        .forEach(function (form) {
            if (!form.checkValidity()) {
                form.classList.remove('was-validated');
            }
        })
        console.log("removed validation");
    }

     function updateAddAnimationState(){

         var textDiv=document.getElementById("add-text");
         textDiv.style.animation='none' ;
         textDiv.offsetHeight; /* trigger reflow */
         textDiv.style.animation=null;
         textDiv.style.animationPlayState="running" ;
         console.log("Should be playing");
     }
</script>